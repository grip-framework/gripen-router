{"repository_name":"github.com/grip-framework/gripen-router","body":"# Gripen Router\n\n[![ISC](https://img.shields.io/badge/License-ISC-blue.svg?style=flat-square)](https://en.wikipedia.org/wiki/ISC_license)\n\nAn HTTP router in Crystal, with conflicts detection.\n\n## Features\n\n- Path conflicts detection (an exception is raised when the route is added)\n- Flexbility and type safety using generic for path parameters and route actions\n\n## Installation\n\nAdd the dependency to your `shard.yml`:\n\n```yaml\ndependencies:\n  gripen_router:\n    github: grip-framework/gripen-router\n```\n\n## Documentation\n\nhttps://grip-framework.github.io/gripen-router/\n\n## License\n\nCopyright (c) 2020 Julien Reichardt - ISC License\n","program":{"html_id":"github.com/grip-framework/gripen-router/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/grip-framework/gripen-router","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/grip-framework/gripen-router/Gripen","path":"Gripen.html","kind":"module","full_name":"Gripen","name":"Gripen","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"gripen_router.cr","line_number":2,"url":"https://github.com/grip-framework/gripen-router/blob/1bbd6835fa9b4c4c2793fea28f126e92b3af417e/src/gripen_router.cr"}],"repository_name":"github.com/grip-framework/gripen-router","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router","path":"Gripen/Router.html","kind":"module","full_name":"Gripen::Router","name":"Router","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"gripen_router.cr","line_number":2,"url":"https://github.com/grip-framework/gripen-router/blob/1bbd6835fa9b4c4c2793fea28f126e92b3af417e/src/gripen_router.cr"}],"repository_name":"github.com/grip-framework/gripen-router","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/grip-framework/gripen-router/Gripen","kind":"module","full_name":"Gripen","name":"Gripen"},"doc":"Router which resolves route paths.","summary":"<p>Router which resolves route paths.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router/Error","path":"Gripen/Router/Error.html","kind":"class","full_name":"Gripen::Router::Error","name":"Error","abstract":false,"superclass":{"html_id":"github.com/grip-framework/gripen-router/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/grip-framework/gripen-router/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/grip-framework/gripen-router/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/grip-framework/gripen-router/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"gripen_router.cr","line_number":3,"url":"https://github.com/grip-framework/gripen-router/blob/1bbd6835fa9b4c4c2793fea28f126e92b3af417e/src/gripen_router.cr"}],"repository_name":"github.com/grip-framework/gripen-router","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router/Node/PathParameterConflict","kind":"class","full_name":"Gripen::Router::Node::PathParameterConflict","name":"PathParameterConflict"},{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router/Node/RouteConflict","kind":"class","full_name":"Gripen::Router::Node::RouteConflict","name":"RouteConflict"}],"including_types":[],"namespace":{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router","kind":"module","full_name":"Gripen::Router","name":"Router"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router/GlobPath","path":"Gripen/Router/GlobPath.html","kind":"module","full_name":"Gripen::Router::GlobPath","name":"GlobPath","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"gripen_router.cr","line_number":7,"url":"https://github.com/grip-framework/gripen-router/blob/1bbd6835fa9b4c4c2793fea28f126e92b3af417e/src/gripen_router.cr"}],"repository_name":"github.com/grip-framework/gripen-router","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router","kind":"module","full_name":"Gripen::Router","name":"Router"},"doc":"Special path parameter, which takes the path segment and all remaing ones following it.","summary":"<p>Special path parameter, which takes the path segment and all remaing ones following it.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router/Node","path":"Gripen/Router/Node.html","kind":"class","full_name":"Gripen::Router::Node(P, A)","name":"Node","abstract":false,"superclass":{"html_id":"github.com/grip-framework/gripen-router/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/grip-framework/gripen-router/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/grip-framework/gripen-router/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"node.cr","line_number":8,"url":"https://github.com/grip-framework/gripen-router/blob/1bbd6835fa9b4c4c2793fea28f126e92b3af417e/src/node.cr"}],"repository_name":"github.com/grip-framework/gripen-router","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router/PathParameterNode","kind":"class","full_name":"Gripen::Router::PathParameterNode(P, A)","name":"PathParameterNode"}],"including_types":[],"namespace":{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router","kind":"module","full_name":"Gripen::Router","name":"Router"},"doc":"Nodes are used to create route paths.\n\nA a tree of nodes is made by assigning children nodes to given paths.\n\nAn action can be attached to a node.\n\n`P` is the path parameter type and `A` the route action type.","summary":"<p>Nodes are used to create route paths.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"action:A?-instance-method","html_id":"action:A?-instance-method","name":"action","doc":"Action associated to the node.","summary":"<p>Action associated to the node.</p>","abstract":false,"args":[],"args_string":" : A?","source_link":"https://github.com/grip-framework/gripen-router/blob/1bbd6835fa9b4c4c2793fea28f126e92b3af417e/src/node.cr#L19","def":{"name":"action","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"A | ::Nil","visibility":"Public","body":"@action"}},{"id":"add(path:Array(P|String),&action:->A):A-instance-method","html_id":"add(path:Array(P|String),&amp;action:-&gt;A):A-instance-method","name":"add","doc":"Adds a route, yields if there is no action and returns the action `T`.\n\nAny conflict will raise an error.","summary":"<p>Adds a route, yields if there is no action and returns the action <code>T</code>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array(P | String)"}],"args_string":"(path : Array(P | String), &action :  -> A) : A","source_link":"https://github.com/grip-framework/gripen-router/blob/1bbd6835fa9b4c4c2793fea28f126e92b3af417e/src/node.cr#L73","def":{"name":"add","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array(P | String)"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"action","doc":null,"default_value":"","external_name":"action","restriction":"(-> A)"},"return_type":"A","visibility":"Public","body":"if path.empty?\n  node_action = @action || action.call\n  @action = node_action\n  return node_action\nend\ncase current_path = path.shift\nwhen P\n  children = check_path_parameter_conflict(PathParameterNode(P, A).new(current_path))\n  children.add(path, &action)\nwhen String\n  case children = @children\n  when PathParameterNode(P, A)\n    raise(RouteConflict.new(\"Cannot add route #{current_path} because of existing path parameter #{children.parameter}\"))\n  else\n    children || (children = Hash(String, Node(P, A)).new)\n    child = children.fetch(current_path) do\n      children[current_path] = Node(P, A).new\n    end\n    @children = children\n    child.add(path, &action)\n  end\nelse\n  raise(Error.new(\"Unreachable path type: #{current_path}\"))\nend\n"}},{"id":"children:Hash(String,Gripen::Router::Node(P,A))|Gripen::Router::PathParameterNode(P,A)|Nil-instance-method","html_id":"children:Hash(String,Gripen::Router::Node(P,A))|Gripen::Router::PathParameterNode(P,A)|Nil-instance-method","name":"children","doc":"A node can either lead to other path nodes or a single path parameter, which will catch all possible path values.","summary":"<p>A node can either lead to other path nodes or a single path parameter, which will catch all possible path values.</p>","abstract":false,"args":[],"args_string":" : Hash(String, Gripen::Router::Node(P, A)) | Gripen::Router::PathParameterNode(P, A) | Nil","source_link":"https://github.com/grip-framework/gripen-router/blob/1bbd6835fa9b4c4c2793fea28f126e92b3af417e/src/node.cr#L16","def":{"name":"children","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Node(P, A)) | PathParameterNode(P, A) | Nil","visibility":"Public","body":"@children"}},{"id":"each_path(&block:Array(P|String),A->)-instance-method","html_id":"each_path(&amp;block:Array(P|String),A-&gt;)-instance-method","name":"each_path","doc":"Returns each path in the node tree.","summary":"<p>Returns each path in the node tree.</p>","abstract":false,"args":[],"args_string":"(&block : Array(P | String), A -> )","source_link":"https://github.com/grip-framework/gripen-router/blob/1bbd6835fa9b4c4c2793fea28f126e92b3af417e/src/node.cr#L154","def":{"name":"each_path","args":[],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Array(P | String), A -> )"},"return_type":"","visibility":"Public","body":"each_path(Array(P | String).new, &block)"}},{"id":"find(full_path:String,delimiter:Char|String=&#39;/&#39;,&:P,String->):A?-instance-method","html_id":"find(full_path:String,delimiter:Char|String=&amp;#39;/&amp;#39;,&amp;:P,String-&gt;):A?-instance-method","name":"find","doc":"Finds a `A` action, and yields each `P` path parameter with its `String` value.","summary":"<p>Finds a <code>A</code> action, and yields each <code>P</code> path parameter with its <code>String</code> value.</p>","abstract":false,"args":[{"name":"full_path","doc":null,"default_value":"","external_name":"full_path","restriction":"String"},{"name":"delimiter","doc":null,"default_value":"'/'","external_name":"delimiter","restriction":"Char | String"}],"args_string":"(full_path : String, delimiter : Char | String = <span class=\"s\">&#39;/&#39;</span>, & : P, String -> ) : A?","source_link":"https://github.com/grip-framework/gripen-router/blob/1bbd6835fa9b4c4c2793fea28f126e92b3af417e/src/node.cr#L30","def":{"name":"find","args":[{"name":"full_path","doc":null,"default_value":"","external_name":"full_path","restriction":"String"},{"name":"delimiter","doc":null,"default_value":"'/'","external_name":"delimiter","restriction":"Char | String"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(P, String -> )"},"return_type":"A | ::Nil","visibility":"Public","body":"node = self\nbyte_offset = full_path.starts_with?(delimiter) ? delimiter.bytesize : 0\ncheck_glob(@children, full_path, byte_offset) do |action, param, string|\n  yield param, string\n  return action\nend\nbyte_offset = 0\nfull_path.split(delimiter) do |path|\n  byte_offset = byte_offset + path.bytesize\n  if path.empty?\n    byte_offset = byte_offset + delimiter.bytesize\n    next\n  end\n  case children = node.children\n  when PathParameterNode(P, A)\n    yield children.parameter, path\n    node = children\n  when Hash(String, Node(P, A))\n    node = children[path]?\n  else\n    node = nil\n  end\n  if !node\n    return\n  end\n  check_glob(node.children, full_path, byte_offset) do |action, param, string|\n    yield param, string\n    return action\n  end\n  byte_offset = byte_offset + delimiter.bytesize\nend\nnode.action\n"}},{"id":"merge!(other:Gripen::Router::Node(P,A),&block:A,A->)-instance-method","html_id":"merge!(other:Gripen::Router::Node(P,A),&amp;block:A,A-&gt;)-instance-method","name":"merge!","doc":"Merges nodes to this one. Yield the existing and the other action in case of a conflict.\n\nAny other conflict will raise an error.","summary":"<p>Merges nodes to this one.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Node(P, A)"}],"args_string":"(other : Gripen::Router::Node(P, A), &block : A, A -> )","source_link":"https://github.com/grip-framework/gripen-router/blob/1bbd6835fa9b4c4c2793fea28f126e92b3af417e/src/node.cr#L120","def":{"name":"merge!","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Node(P, A)"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(A, A -> )"},"return_type":"","visibility":"Public","body":"if other_action = other.action\n  if action = @action\n    yield action, other_action\n  else\n    @action = other_action\n  end\nend\ncase other_children = other.children\nwhen Hash(String, Node(P, A))\n  case children = @children\n  when PathParameterNode(P, A)\n    raise(RouteConflict.new(\"Cannot add routes #{other_children.keys} because of existing path parameter #{children.parameter}\"))\n  when Hash(String, Node(P, A))\n    other_children.each do |path, other_node|\n      if !other_node\n        next\n      end\n      if children.has_key?(path)\n        children[path].merge!(other_node, &block)\n      else\n        children[path] = other_node\n      end\n    end\n  else\n    @children = other_children\n  end\nwhen PathParameterNode(P, A)\n  children = check_path_parameter_conflict(other_children)\n  children.merge!(other_children, &block)\nelse\nend\n"}}],"macros":[],"types":[{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router/Node/PathParameterConflict","path":"Gripen/Router/Node/PathParameterConflict.html","kind":"class","full_name":"Gripen::Router::Node::PathParameterConflict","name":"PathParameterConflict","abstract":false,"superclass":{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router/Error","kind":"class","full_name":"Gripen::Router::Error","name":"Error"},"ancestors":[{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router/Error","kind":"class","full_name":"Gripen::Router::Error","name":"Error"},{"html_id":"github.com/grip-framework/gripen-router/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/grip-framework/gripen-router/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/grip-framework/gripen-router/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"node.cr","line_number":9,"url":"https://github.com/grip-framework/gripen-router/blob/1bbd6835fa9b4c4c2793fea28f126e92b3af417e/src/node.cr"}],"repository_name":"github.com/grip-framework/gripen-router","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router/Node","kind":"class","full_name":"Gripen::Router::Node(P, A)","name":"Node"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router/Node/RouteConflict","path":"Gripen/Router/Node/RouteConflict.html","kind":"class","full_name":"Gripen::Router::Node::RouteConflict","name":"RouteConflict","abstract":false,"superclass":{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router/Error","kind":"class","full_name":"Gripen::Router::Error","name":"Error"},"ancestors":[{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router/Error","kind":"class","full_name":"Gripen::Router::Error","name":"Error"},{"html_id":"github.com/grip-framework/gripen-router/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/grip-framework/gripen-router/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/grip-framework/gripen-router/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"node.cr","line_number":12,"url":"https://github.com/grip-framework/gripen-router/blob/1bbd6835fa9b4c4c2793fea28f126e92b3af417e/src/node.cr"}],"repository_name":"github.com/grip-framework/gripen-router","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router/Node","kind":"class","full_name":"Gripen::Router::Node(P, A)","name":"Node"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router/PathParameterNode","path":"Gripen/Router/PathParameterNode.html","kind":"class","full_name":"Gripen::Router::PathParameterNode(P, A)","name":"PathParameterNode","abstract":false,"superclass":{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router/Node","kind":"class","full_name":"Gripen::Router::Node","name":"Node"},"ancestors":[{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router/Node","kind":"class","full_name":"Gripen::Router::Node","name":"Node"},{"html_id":"github.com/grip-framework/gripen-router/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/grip-framework/gripen-router/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"path_parameter_node.cr","line_number":2,"url":"https://github.com/grip-framework/gripen-router/blob/1bbd6835fa9b4c4c2793fea28f126e92b3af417e/src/path_parameter_node.cr"}],"repository_name":"github.com/grip-framework/gripen-router","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/grip-framework/gripen-router/Gripen/Router","kind":"module","full_name":"Gripen::Router","name":"Router"},"doc":"Path parameter node.","summary":"<p>Path parameter node.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"parameter:P-instance-method","html_id":"parameter:P-instance-method","name":"parameter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : P","source_link":"https://github.com/grip-framework/gripen-router/blob/1bbd6835fa9b4c4c2793fea28f126e92b3af417e/src/path_parameter_node.cr#L3","def":{"name":"parameter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"P","visibility":"Public","body":"@parameter"}}],"macros":[],"types":[]}]}]}]}}